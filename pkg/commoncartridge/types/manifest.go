// the types package consists of the autogenerated structs from the IMSCC template files, and of possible member functions for the associated structs (e.g. manifest.go)
package types

import (
	"fmt"
)

//-- todo move this into imscc and load the manifest as a field in the IMSCC struct
func (m *Manifest) FindItem(id string) (Item, error) {
	// fmt.Printf("starting search for %s\n", id)
	var item Item
	for i := range m.Organizations.Organization.Item.Item {
		item, err := m.findItem(m.Organizations.Organization.Item.Item[i].Item, id)

		if err != nil {
			return item, nil
		}

		if item.Identifierref == id {
			return item, nil
		}
	}

	return item, fmt.Errorf("no item found for id %s", id)
}

func (m *Manifest) findItem(items []Item, id string) (Item, error) {
	// fmt.Printf("looking for %s in %d items\n", id, len(items))
	var item Item
	var err error
	for i := range items {
		if items[i].Identifierref == id {
			return items[i], nil
		}

		if len(items[i].Item) > 0 {
			item, err = m.findItem(items[i].Item, id)
		}
	}

	return item, err
}
